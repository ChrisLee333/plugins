#ifndef DOCKWIDGETDUMMYMOTOR_H
#define DOCKWIDGETDUMMYMOTOR_H

/**\file DockWidgetUSBMotion3XIII.h
* \brief In this file the class of the non modal dialog for the AerotechEnsemble are specified
* 
*/
#include "common/sharedStructures.h"
#include "common/sharedStructuresQt.h"

#include "ui_dockWidgetAerotechEnsemble.h"	//! Header-file generated by Qt-Gui-Editor which has to be called

#include <QtGui>
#include <qwidget.h>
#include <qmap.h>
#include <qstring.h>
#include <qvector.h>

namespace ito //Forward-Declaration
{
class AddInActuator;
}

//----------------------------------------------------------------------------------------------------------------------------------
/** @class DockWidgetUSBMotion3XIII
*   @brief Config dialog functionality of AerotechEnsemble
*   
*   This class is used for the non-modal dialog. It is used for displaying positions and positioning.
*	ui_dockWidgetDummyMotor.h is generated by the Gui-Editor. 
*
*\sa DummyMotor
*/
class DockWidgetAerotechEnsemble : public QWidget
{
    Q_OBJECT
    public:
        DockWidgetAerotechEnsemble(ito::AddInActuator *actuator);	//!< Constructor called by AerotechEnsemble::Constructor
        ~DockWidgetAerotechEnsemble() {};

    private:
        Ui::DockWidgetAerotechEnsemble ui;	//! Handle to the dialog
        ito::AddInActuator *m_actuator;

        void enableWidget(bool enabled);

	signals:
		void setAbsTargetDegree(double target1, double target2, double target3);
        void setRelTargetDegree(unsigned int axisNo, double relStepDegree);

	public slots:
        void basicInformationChanged(QString name, QString id, QString axis, QVector<bool> available);
        void actuatorStatusChanged(QVector<int> status, QVector<double> actPosition); //!< slot to receive information about status and position changes.
        void targetChanged(QVector<double> targetPositions);

    private slots:
        void on_btn_relPlus1_clicked();
        void on_btn_relMinus1_clicked();
        void on_btn_relPlus2_clicked();
        void on_btn_relMinus2_clicked();
        void on_btn_relPlus3_clicked();
        void on_btn_relMinus3_clicked();
        void on_btnStartAbsolute_clicked();
        void on_btnStop_clicked();
};

#endif
