#ifndef DIALOGAEROTECHENSEMBLE_H
#define DIALOGAEROTECHENSEMBLE_H

/**\file dialogAerotechEnsemble.h
* \brief In this file the class of the modal dialog for the AerotechEnsemble are specified
*
*\sa dialogAerotechEnsemble, AerotechEnsemble
*\author Wolfram Lyda
*\date    Oct2011
*/

#include "common/sharedStructures.h"
#include "common/sharedStructuresQt.h"
#include "common/addInInterface.h"

#include "ui_dialogAerotechEnsemble.h"    //! Header-file generated by Qt-Gui-Editor which has to be called

#include <QtGui>
#include <qdialog.h>

//----------------------------------------------------------------------------------------------------------------------------------
/** @class dialogAerotechEnsemble
*   @brief Config dialog functionality of AerotechEnsemble
*
*   This class is used for the modal configuration dialog. It is used for parameter setup and calibration.
*    ui_dialogAerotechEnsemble.h is generated by the Gui-Editor.
*
*\sa AerotechEnsemble
*/
class dialogAerotechEnsemble : public QDialog
{
    Q_OBJECT

    private:
        Ui::dialogAerotechEnsemble ui;    //! Handle to the dialog
        ito::AddInActuator *m_pAerotechEnsemble;    //! Handle to the attached motor to invoke calib command
        int m_numaxis;    //!    Number of axis of this device
        QVector<QDoubleSpinBox*> m_pDialogSpeed;
        QVector<QLabel*> m_pDialogSpeedLabel;
        QVector<QCheckBox*> m_pDialogEnabled;

    public:
        dialogAerotechEnsemble(ito::AddInActuator *motor, QStringList axisNames);
        ~dialogAerotechEnsemble() {};
        int setVals(QMap<QString, ito::Param> *paramVals); //!< Function called by AerotechEnsemble::showConfDialog to set parameters values at dialog startup
        int getVals(QMap<QString, ito::Param> *paramVals);    //!< Function called by AerotechEnsemble::showConfDialog to get back the changed parameters

    public slots:

    private slots:
        void on_pushButtonCalib_clicked();    //!< If the Botton invokes a AerotechEnsemble::Calib of enabled Axis
};

#endif
